// Code generated by dbus-codegen-go DO NOT EDIT.
package systemd

import (
	"context"
	"errors"
	"fmt"
	"github.com/godbus/dbus/v5"
)

// Signal is a common interface for all signals.
type Signal interface {
	Name() string
	Interface() string
	Sender() string

	path() dbus.ObjectPath
	values() []interface{}
}

// ErrUnknownSignal is returned by LookupSignal when a signal cannot be resolved.
var ErrUnknownSignal = errors.New("unknown signal")

// LookupSignal converts the given raw D-Bus signal with variable body
// into one with typed structured body or returns ErrUnknownSignal error.
func LookupSignal(signal *dbus.Signal) (Signal, error) {
	switch signal.Name {
	case InterfaceOrgFreedesktopDBusProperties + "." + "PropertiesChanged":
		v0, ok := signal.Body[0].(string)
		if !ok {
			return nil, fmt.Errorf("prop .Interface is %T, not string", signal.Body[0])
		}
		v1, ok := signal.Body[1].(map[string]dbus.Variant)
		if !ok {
			return nil, fmt.Errorf("prop .ChangedProperties is %T, not map[string]dbus.Variant", signal.Body[1])
		}
		v2, ok := signal.Body[2].([]string)
		if !ok {
			return nil, fmt.Errorf("prop .InvalidatedProperties is %T, not []string", signal.Body[2])
		}
		return &OrgFreedesktopDBusPropertiesPropertiesChangedSignal{
			sender: signal.Sender,
			Path:   signal.Path,
			Body: &OrgFreedesktopDBusPropertiesPropertiesChangedSignalBody{
				Interface:             v0,
				ChangedProperties:     v1,
				InvalidatedProperties: v2,
			},
		}, nil
	case InterfaceOrgFreedesktopSystemd1Manager + "." + "UnitNew":
		v0, ok := signal.Body[0].(string)
		if !ok {
			return nil, fmt.Errorf("prop .V0 is %T, not string", signal.Body[0])
		}
		v1, ok := signal.Body[1].(dbus.ObjectPath)
		if !ok {
			return nil, fmt.Errorf("prop .V1 is %T, not dbus.ObjectPath", signal.Body[1])
		}
		return &OrgFreedesktopSystemd1ManagerUnitNewSignal{
			sender: signal.Sender,
			Path:   signal.Path,
			Body: &OrgFreedesktopSystemd1ManagerUnitNewSignalBody{
				V0: v0,
				V1: v1,
			},
		}, nil
	case InterfaceOrgFreedesktopSystemd1Manager + "." + "UnitRemoved":
		v0, ok := signal.Body[0].(string)
		if !ok {
			return nil, fmt.Errorf("prop .V0 is %T, not string", signal.Body[0])
		}
		v1, ok := signal.Body[1].(dbus.ObjectPath)
		if !ok {
			return nil, fmt.Errorf("prop .V1 is %T, not dbus.ObjectPath", signal.Body[1])
		}
		return &OrgFreedesktopSystemd1ManagerUnitRemovedSignal{
			sender: signal.Sender,
			Path:   signal.Path,
			Body: &OrgFreedesktopSystemd1ManagerUnitRemovedSignalBody{
				V0: v0,
				V1: v1,
			},
		}, nil
	case InterfaceOrgFreedesktopSystemd1Manager + "." + "JobNew":
		v0, ok := signal.Body[0].(uint32)
		if !ok {
			return nil, fmt.Errorf("prop .V0 is %T, not uint32", signal.Body[0])
		}
		v1, ok := signal.Body[1].(dbus.ObjectPath)
		if !ok {
			return nil, fmt.Errorf("prop .V1 is %T, not dbus.ObjectPath", signal.Body[1])
		}
		v2, ok := signal.Body[2].(string)
		if !ok {
			return nil, fmt.Errorf("prop .V2 is %T, not string", signal.Body[2])
		}
		return &OrgFreedesktopSystemd1ManagerJobNewSignal{
			sender: signal.Sender,
			Path:   signal.Path,
			Body: &OrgFreedesktopSystemd1ManagerJobNewSignalBody{
				V0: v0,
				V1: v1,
				V2: v2,
			},
		}, nil
	case InterfaceOrgFreedesktopSystemd1Manager + "." + "JobRemoved":
		v0, ok := signal.Body[0].(uint32)
		if !ok {
			return nil, fmt.Errorf("prop .V0 is %T, not uint32", signal.Body[0])
		}
		v1, ok := signal.Body[1].(dbus.ObjectPath)
		if !ok {
			return nil, fmt.Errorf("prop .V1 is %T, not dbus.ObjectPath", signal.Body[1])
		}
		v2, ok := signal.Body[2].(string)
		if !ok {
			return nil, fmt.Errorf("prop .V2 is %T, not string", signal.Body[2])
		}
		v3, ok := signal.Body[3].(string)
		if !ok {
			return nil, fmt.Errorf("prop .V3 is %T, not string", signal.Body[3])
		}
		return &OrgFreedesktopSystemd1ManagerJobRemovedSignal{
			sender: signal.Sender,
			Path:   signal.Path,
			Body: &OrgFreedesktopSystemd1ManagerJobRemovedSignalBody{
				V0: v0,
				V1: v1,
				V2: v2,
				V3: v3,
			},
		}, nil
	case InterfaceOrgFreedesktopSystemd1Manager + "." + "StartupFinished":
		v0, ok := signal.Body[0].(uint64)
		if !ok {
			return nil, fmt.Errorf("prop .V0 is %T, not uint64", signal.Body[0])
		}
		v1, ok := signal.Body[1].(uint64)
		if !ok {
			return nil, fmt.Errorf("prop .V1 is %T, not uint64", signal.Body[1])
		}
		v2, ok := signal.Body[2].(uint64)
		if !ok {
			return nil, fmt.Errorf("prop .V2 is %T, not uint64", signal.Body[2])
		}
		v3, ok := signal.Body[3].(uint64)
		if !ok {
			return nil, fmt.Errorf("prop .V3 is %T, not uint64", signal.Body[3])
		}
		v4, ok := signal.Body[4].(uint64)
		if !ok {
			return nil, fmt.Errorf("prop .V4 is %T, not uint64", signal.Body[4])
		}
		v5, ok := signal.Body[5].(uint64)
		if !ok {
			return nil, fmt.Errorf("prop .V5 is %T, not uint64", signal.Body[5])
		}
		return &OrgFreedesktopSystemd1ManagerStartupFinishedSignal{
			sender: signal.Sender,
			Path:   signal.Path,
			Body: &OrgFreedesktopSystemd1ManagerStartupFinishedSignalBody{
				V0: v0,
				V1: v1,
				V2: v2,
				V3: v3,
				V4: v4,
				V5: v5,
			},
		}, nil
	case InterfaceOrgFreedesktopSystemd1Manager + "." + "UnitFilesChanged":
		return &OrgFreedesktopSystemd1ManagerUnitFilesChangedSignal{
			sender: signal.Sender,
			Path:   signal.Path,
			Body:   &OrgFreedesktopSystemd1ManagerUnitFilesChangedSignalBody{},
		}, nil
	case InterfaceOrgFreedesktopSystemd1Manager + "." + "Reloading":
		v0, ok := signal.Body[0].(bool)
		if !ok {
			return nil, fmt.Errorf("prop .V0 is %T, not bool", signal.Body[0])
		}
		return &OrgFreedesktopSystemd1ManagerReloadingSignal{
			sender: signal.Sender,
			Path:   signal.Path,
			Body: &OrgFreedesktopSystemd1ManagerReloadingSignalBody{
				V0: v0,
			},
		}, nil
	default:
		return nil, ErrUnknownSignal
	}
}

// AddMatchSignal registers a match rule for the given signal,
// opts are appended to the automatically generated signal's rules.
func AddMatchSignal(conn *dbus.Conn, s Signal, opts ...dbus.MatchOption) error {
	return conn.AddMatchSignal(append([]dbus.MatchOption{
		dbus.WithMatchInterface(s.Interface()),
		dbus.WithMatchMember(s.Name()),
	}, opts...)...)
}

// RemoveMatchSignal unregisters the previously registered subscription.
func RemoveMatchSignal(conn *dbus.Conn, s Signal, opts ...dbus.MatchOption) error {
	return conn.RemoveMatchSignal(append([]dbus.MatchOption{
		dbus.WithMatchInterface(s.Interface()),
		dbus.WithMatchMember(s.Name()),
	}, opts...)...)
}

// Interface name constants.
const (
	InterfaceOrgFreedesktopDBusProperties  = "org.freedesktop.DBus.Properties"
	InterfaceOrgFreedesktopSystemd1Unit    = "org.freedesktop.systemd1.Unit"
	InterfaceOrgFreedesktopSystemd1Manager = "org.freedesktop.systemd1.Manager"
)

// NewOrgFreedesktopDBusProperties creates and allocates org.freedesktop.DBus.Properties.
func NewOrgFreedesktopDBusProperties(object dbus.BusObject) *OrgFreedesktopDBusProperties {
	return &OrgFreedesktopDBusProperties{object}
}

// OrgFreedesktopDBusProperties implements org.freedesktop.DBus.Properties D-Bus interface.
type OrgFreedesktopDBusProperties struct {
	object dbus.BusObject
}

// Get calls org.freedesktop.DBus.Properties.Get method.
func (o *OrgFreedesktopDBusProperties) Get(ctx context.Context, inInterface string, property string) (value dbus.Variant, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopDBusProperties+".Get", 0, inInterface, property).Store(&value)
	return
}

// GetAll calls org.freedesktop.DBus.Properties.GetAll method.
func (o *OrgFreedesktopDBusProperties) GetAll(ctx context.Context, inInterface string) (properties map[string]dbus.Variant, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopDBusProperties+".GetAll", 0, inInterface).Store(&properties)
	return
}

// Set calls org.freedesktop.DBus.Properties.Set method.
func (o *OrgFreedesktopDBusProperties) Set(ctx context.Context, inInterface string, property string, value dbus.Variant) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopDBusProperties+".Set", 0, inInterface, property, value).Store()
	return
}

// OrgFreedesktopDBusPropertiesPropertiesChangedSignal represents org.freedesktop.DBus.Properties.PropertiesChanged signal.
type OrgFreedesktopDBusPropertiesPropertiesChangedSignal struct {
	sender string
	Path   dbus.ObjectPath
	Body   *OrgFreedesktopDBusPropertiesPropertiesChangedSignalBody
}

// Name returns the signal's name.
func (s *OrgFreedesktopDBusPropertiesPropertiesChangedSignal) Name() string {
	return "PropertiesChanged"
}

// Interface returns the signal's interface.
func (s *OrgFreedesktopDBusPropertiesPropertiesChangedSignal) Interface() string {
	return InterfaceOrgFreedesktopDBusProperties
}

// Sender returns the signal's sender unique name.
func (s *OrgFreedesktopDBusPropertiesPropertiesChangedSignal) Sender() string {
	return s.sender
}

func (s *OrgFreedesktopDBusPropertiesPropertiesChangedSignal) path() dbus.ObjectPath {
	return s.Path
}

func (s *OrgFreedesktopDBusPropertiesPropertiesChangedSignal) values() []interface{} {
	return []interface{}{s.Body.Interface, s.Body.ChangedProperties, s.Body.InvalidatedProperties}
}

// OrgFreedesktopDBusPropertiesPropertiesChangedSignalBody is body container.
type OrgFreedesktopDBusPropertiesPropertiesChangedSignalBody struct {
	Interface             string
	ChangedProperties     map[string]dbus.Variant
	InvalidatedProperties []string
}

// NewOrgFreedesktopSystemd1Unit creates and allocates org.freedesktop.systemd1.Unit.
func NewOrgFreedesktopSystemd1Unit(object dbus.BusObject) *OrgFreedesktopSystemd1Unit {
	return &OrgFreedesktopSystemd1Unit{object}
}

// OrgFreedesktopSystemd1Unit implements org.freedesktop.systemd1.Unit D-Bus interface.
type OrgFreedesktopSystemd1Unit struct {
	object dbus.BusObject
}

// Start calls org.freedesktop.systemd1.Unit.Start method.
func (o *OrgFreedesktopSystemd1Unit) Start(ctx context.Context, in0 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Unit+".Start", 0, in0).Store(&out0)
	return
}

// Stop calls org.freedesktop.systemd1.Unit.Stop method.
func (o *OrgFreedesktopSystemd1Unit) Stop(ctx context.Context, in0 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Unit+".Stop", 0, in0).Store(&out0)
	return
}

// Reload calls org.freedesktop.systemd1.Unit.Reload method.
func (o *OrgFreedesktopSystemd1Unit) Reload(ctx context.Context, in0 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Unit+".Reload", 0, in0).Store(&out0)
	return
}

// Restart calls org.freedesktop.systemd1.Unit.Restart method.
func (o *OrgFreedesktopSystemd1Unit) Restart(ctx context.Context, in0 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Unit+".Restart", 0, in0).Store(&out0)
	return
}

// TryRestart calls org.freedesktop.systemd1.Unit.TryRestart method.
func (o *OrgFreedesktopSystemd1Unit) TryRestart(ctx context.Context, in0 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Unit+".TryRestart", 0, in0).Store(&out0)
	return
}

// ReloadOrRestart calls org.freedesktop.systemd1.Unit.ReloadOrRestart method.
func (o *OrgFreedesktopSystemd1Unit) ReloadOrRestart(ctx context.Context, in0 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Unit+".ReloadOrRestart", 0, in0).Store(&out0)
	return
}

// ReloadOrTryRestart calls org.freedesktop.systemd1.Unit.ReloadOrTryRestart method.
func (o *OrgFreedesktopSystemd1Unit) ReloadOrTryRestart(ctx context.Context, in0 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Unit+".ReloadOrTryRestart", 0, in0).Store(&out0)
	return
}

// EnqueueJob calls org.freedesktop.systemd1.Unit.EnqueueJob method.
func (o *OrgFreedesktopSystemd1Unit) EnqueueJob(ctx context.Context, in0 string, in1 string) (out0 uint32, out1 dbus.ObjectPath, out2 string, out3 dbus.ObjectPath, out4 string, out5 []struct {
	V0 uint32
	V1 dbus.ObjectPath
	V2 string
	V3 dbus.ObjectPath
	V4 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Unit+".EnqueueJob", 0, in0, in1).Store(&out0, &out1, &out2, &out3, &out4, &out5)
	return
}

// Kill calls org.freedesktop.systemd1.Unit.Kill method.
func (o *OrgFreedesktopSystemd1Unit) Kill(ctx context.Context, in0 string, in1 int32) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Unit+".Kill", 0, in0, in1).Store()
	return
}

// ResetFailed calls org.freedesktop.systemd1.Unit.ResetFailed method.
func (o *OrgFreedesktopSystemd1Unit) ResetFailed(ctx context.Context) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Unit+".ResetFailed", 0).Store()
	return
}

// SetProperties calls org.freedesktop.systemd1.Unit.SetProperties method.
func (o *OrgFreedesktopSystemd1Unit) SetProperties(ctx context.Context, in0 bool, in1 []struct {
	V0 string
	V1 dbus.Variant
}) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Unit+".SetProperties", 0, in0, in1).Store()
	return
}

// Ref calls org.freedesktop.systemd1.Unit.Ref method.
func (o *OrgFreedesktopSystemd1Unit) Ref(ctx context.Context) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Unit+".Ref", 0).Store()
	return
}

// Unref calls org.freedesktop.systemd1.Unit.Unref method.
func (o *OrgFreedesktopSystemd1Unit) Unref(ctx context.Context) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Unit+".Unref", 0).Store()
	return
}

// Clean calls org.freedesktop.systemd1.Unit.Clean method.
func (o *OrgFreedesktopSystemd1Unit) Clean(ctx context.Context, in0 []string) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Unit+".Clean", 0, in0).Store()
	return
}

// GetId gets org.freedesktop.systemd1.Unit.Id property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetId(ctx context.Context) (id string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Id").Store(&id)
	return
}

// GetNames gets org.freedesktop.systemd1.Unit.Names property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetNames(ctx context.Context) (names []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Names").Store(&names)
	return
}

// GetFollowing gets org.freedesktop.systemd1.Unit.Following property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
func (o *OrgFreedesktopSystemd1Unit) GetFollowing(ctx context.Context) (following string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Following").Store(&following)
	return
}

// GetRequires gets org.freedesktop.systemd1.Unit.Requires property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetRequires(ctx context.Context) (requires []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Requires").Store(&requires)
	return
}

// GetRequisite gets org.freedesktop.systemd1.Unit.Requisite property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetRequisite(ctx context.Context) (requisite []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Requisite").Store(&requisite)
	return
}

// GetWants gets org.freedesktop.systemd1.Unit.Wants property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetWants(ctx context.Context) (wants []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Wants").Store(&wants)
	return
}

// GetBindsTo gets org.freedesktop.systemd1.Unit.BindsTo property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetBindsTo(ctx context.Context) (bindsTo []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "BindsTo").Store(&bindsTo)
	return
}

// GetPartOf gets org.freedesktop.systemd1.Unit.PartOf property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetPartOf(ctx context.Context) (partOf []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "PartOf").Store(&partOf)
	return
}

// GetRequiredBy gets org.freedesktop.systemd1.Unit.RequiredBy property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetRequiredBy(ctx context.Context) (requiredBy []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "RequiredBy").Store(&requiredBy)
	return
}

// GetRequisiteOf gets org.freedesktop.systemd1.Unit.RequisiteOf property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetRequisiteOf(ctx context.Context) (requisiteOf []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "RequisiteOf").Store(&requisiteOf)
	return
}

// GetWantedBy gets org.freedesktop.systemd1.Unit.WantedBy property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetWantedBy(ctx context.Context) (wantedBy []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "WantedBy").Store(&wantedBy)
	return
}

// GetBoundBy gets org.freedesktop.systemd1.Unit.BoundBy property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetBoundBy(ctx context.Context) (boundBy []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "BoundBy").Store(&boundBy)
	return
}

// GetConsistsOf gets org.freedesktop.systemd1.Unit.ConsistsOf property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetConsistsOf(ctx context.Context) (consistsOf []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "ConsistsOf").Store(&consistsOf)
	return
}

// GetConflicts gets org.freedesktop.systemd1.Unit.Conflicts property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetConflicts(ctx context.Context) (conflicts []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Conflicts").Store(&conflicts)
	return
}

// GetConflictedBy gets org.freedesktop.systemd1.Unit.ConflictedBy property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetConflictedBy(ctx context.Context) (conflictedBy []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "ConflictedBy").Store(&conflictedBy)
	return
}

// GetBefore gets org.freedesktop.systemd1.Unit.Before property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetBefore(ctx context.Context) (before []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Before").Store(&before)
	return
}

// GetAfter gets org.freedesktop.systemd1.Unit.After property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetAfter(ctx context.Context) (after []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "After").Store(&after)
	return
}

// GetOnFailure gets org.freedesktop.systemd1.Unit.OnFailure property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetOnFailure(ctx context.Context) (onFailure []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "OnFailure").Store(&onFailure)
	return
}

// GetTriggers gets org.freedesktop.systemd1.Unit.Triggers property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetTriggers(ctx context.Context) (triggers []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Triggers").Store(&triggers)
	return
}

// GetTriggeredBy gets org.freedesktop.systemd1.Unit.TriggeredBy property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetTriggeredBy(ctx context.Context) (triggeredBy []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "TriggeredBy").Store(&triggeredBy)
	return
}

// GetPropagatesReloadTo gets org.freedesktop.systemd1.Unit.PropagatesReloadTo property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetPropagatesReloadTo(ctx context.Context) (propagatesReloadTo []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "PropagatesReloadTo").Store(&propagatesReloadTo)
	return
}

// GetReloadPropagatedFrom gets org.freedesktop.systemd1.Unit.ReloadPropagatedFrom property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetReloadPropagatedFrom(ctx context.Context) (reloadPropagatedFrom []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "ReloadPropagatedFrom").Store(&reloadPropagatedFrom)
	return
}

// GetJoinsNamespaceOf gets org.freedesktop.systemd1.Unit.JoinsNamespaceOf property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetJoinsNamespaceOf(ctx context.Context) (joinsNamespaceOf []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "JoinsNamespaceOf").Store(&joinsNamespaceOf)
	return
}

// GetRequiresMountsFor gets org.freedesktop.systemd1.Unit.RequiresMountsFor property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetRequiresMountsFor(ctx context.Context) (requiresMountsFor []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "RequiresMountsFor").Store(&requiresMountsFor)
	return
}

// GetDocumentation gets org.freedesktop.systemd1.Unit.Documentation property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetDocumentation(ctx context.Context) (documentation []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Documentation").Store(&documentation)
	return
}

// GetDescription gets org.freedesktop.systemd1.Unit.Description property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetDescription(ctx context.Context) (description string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Description").Store(&description)
	return
}

// GetLoadState gets org.freedesktop.systemd1.Unit.LoadState property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetLoadState(ctx context.Context) (loadState string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "LoadState").Store(&loadState)
	return
}

// GetActiveState gets org.freedesktop.systemd1.Unit.ActiveState property.
func (o *OrgFreedesktopSystemd1Unit) GetActiveState(ctx context.Context) (activeState string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "ActiveState").Store(&activeState)
	return
}

// GetSubState gets org.freedesktop.systemd1.Unit.SubState property.
func (o *OrgFreedesktopSystemd1Unit) GetSubState(ctx context.Context) (subState string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "SubState").Store(&subState)
	return
}

// GetFragmentPath gets org.freedesktop.systemd1.Unit.FragmentPath property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetFragmentPath(ctx context.Context) (fragmentPath string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "FragmentPath").Store(&fragmentPath)
	return
}

// GetSourcePath gets org.freedesktop.systemd1.Unit.SourcePath property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetSourcePath(ctx context.Context) (sourcePath string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "SourcePath").Store(&sourcePath)
	return
}

// GetDropInPaths gets org.freedesktop.systemd1.Unit.DropInPaths property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetDropInPaths(ctx context.Context) (dropInPaths []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "DropInPaths").Store(&dropInPaths)
	return
}

// GetUnitFileState gets org.freedesktop.systemd1.Unit.UnitFileState property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
func (o *OrgFreedesktopSystemd1Unit) GetUnitFileState(ctx context.Context) (unitFileState string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "UnitFileState").Store(&unitFileState)
	return
}

// GetUnitFilePreset gets org.freedesktop.systemd1.Unit.UnitFilePreset property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
func (o *OrgFreedesktopSystemd1Unit) GetUnitFilePreset(ctx context.Context) (unitFilePreset string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "UnitFilePreset").Store(&unitFilePreset)
	return
}

// GetStateChangeTimestamp gets org.freedesktop.systemd1.Unit.StateChangeTimestamp property.
func (o *OrgFreedesktopSystemd1Unit) GetStateChangeTimestamp(ctx context.Context) (stateChangeTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "StateChangeTimestamp").Store(&stateChangeTimestamp)
	return
}

// GetStateChangeTimestampMonotonic gets org.freedesktop.systemd1.Unit.StateChangeTimestampMonotonic property.
func (o *OrgFreedesktopSystemd1Unit) GetStateChangeTimestampMonotonic(ctx context.Context) (stateChangeTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "StateChangeTimestampMonotonic").Store(&stateChangeTimestampMonotonic)
	return
}

// GetInactiveExitTimestamp gets org.freedesktop.systemd1.Unit.InactiveExitTimestamp property.
func (o *OrgFreedesktopSystemd1Unit) GetInactiveExitTimestamp(ctx context.Context) (inactiveExitTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "InactiveExitTimestamp").Store(&inactiveExitTimestamp)
	return
}

// GetInactiveExitTimestampMonotonic gets org.freedesktop.systemd1.Unit.InactiveExitTimestampMonotonic property.
func (o *OrgFreedesktopSystemd1Unit) GetInactiveExitTimestampMonotonic(ctx context.Context) (inactiveExitTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "InactiveExitTimestampMonotonic").Store(&inactiveExitTimestampMonotonic)
	return
}

// GetActiveEnterTimestamp gets org.freedesktop.systemd1.Unit.ActiveEnterTimestamp property.
func (o *OrgFreedesktopSystemd1Unit) GetActiveEnterTimestamp(ctx context.Context) (activeEnterTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "ActiveEnterTimestamp").Store(&activeEnterTimestamp)
	return
}

// GetActiveEnterTimestampMonotonic gets org.freedesktop.systemd1.Unit.ActiveEnterTimestampMonotonic property.
func (o *OrgFreedesktopSystemd1Unit) GetActiveEnterTimestampMonotonic(ctx context.Context) (activeEnterTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "ActiveEnterTimestampMonotonic").Store(&activeEnterTimestampMonotonic)
	return
}

// GetActiveExitTimestamp gets org.freedesktop.systemd1.Unit.ActiveExitTimestamp property.
func (o *OrgFreedesktopSystemd1Unit) GetActiveExitTimestamp(ctx context.Context) (activeExitTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "ActiveExitTimestamp").Store(&activeExitTimestamp)
	return
}

// GetActiveExitTimestampMonotonic gets org.freedesktop.systemd1.Unit.ActiveExitTimestampMonotonic property.
func (o *OrgFreedesktopSystemd1Unit) GetActiveExitTimestampMonotonic(ctx context.Context) (activeExitTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "ActiveExitTimestampMonotonic").Store(&activeExitTimestampMonotonic)
	return
}

// GetInactiveEnterTimestamp gets org.freedesktop.systemd1.Unit.InactiveEnterTimestamp property.
func (o *OrgFreedesktopSystemd1Unit) GetInactiveEnterTimestamp(ctx context.Context) (inactiveEnterTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "InactiveEnterTimestamp").Store(&inactiveEnterTimestamp)
	return
}

// GetInactiveEnterTimestampMonotonic gets org.freedesktop.systemd1.Unit.InactiveEnterTimestampMonotonic property.
func (o *OrgFreedesktopSystemd1Unit) GetInactiveEnterTimestampMonotonic(ctx context.Context) (inactiveEnterTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "InactiveEnterTimestampMonotonic").Store(&inactiveEnterTimestampMonotonic)
	return
}

// GetCanStart gets org.freedesktop.systemd1.Unit.CanStart property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetCanStart(ctx context.Context) (canStart bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "CanStart").Store(&canStart)
	return
}

// GetCanStop gets org.freedesktop.systemd1.Unit.CanStop property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetCanStop(ctx context.Context) (canStop bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "CanStop").Store(&canStop)
	return
}

// GetCanReload gets org.freedesktop.systemd1.Unit.CanReload property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetCanReload(ctx context.Context) (canReload bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "CanReload").Store(&canReload)
	return
}

// GetCanIsolate gets org.freedesktop.systemd1.Unit.CanIsolate property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetCanIsolate(ctx context.Context) (canIsolate bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "CanIsolate").Store(&canIsolate)
	return
}

// GetCanClean gets org.freedesktop.systemd1.Unit.CanClean property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetCanClean(ctx context.Context) (canClean []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "CanClean").Store(&canClean)
	return
}

// GetJob gets org.freedesktop.systemd1.Unit.Job property.
func (o *OrgFreedesktopSystemd1Unit) GetJob(ctx context.Context) (job struct {
	V0 uint32
	V1 dbus.ObjectPath
}, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Job").Store(&job)
	return
}

// GetStopWhenUnneeded gets org.freedesktop.systemd1.Unit.StopWhenUnneeded property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetStopWhenUnneeded(ctx context.Context) (stopWhenUnneeded bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "StopWhenUnneeded").Store(&stopWhenUnneeded)
	return
}

// GetRefuseManualStart gets org.freedesktop.systemd1.Unit.RefuseManualStart property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetRefuseManualStart(ctx context.Context) (refuseManualStart bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "RefuseManualStart").Store(&refuseManualStart)
	return
}

// GetRefuseManualStop gets org.freedesktop.systemd1.Unit.RefuseManualStop property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetRefuseManualStop(ctx context.Context) (refuseManualStop bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "RefuseManualStop").Store(&refuseManualStop)
	return
}

// GetAllowIsolate gets org.freedesktop.systemd1.Unit.AllowIsolate property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetAllowIsolate(ctx context.Context) (allowIsolate bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "AllowIsolate").Store(&allowIsolate)
	return
}

// GetDefaultDependencies gets org.freedesktop.systemd1.Unit.DefaultDependencies property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetDefaultDependencies(ctx context.Context) (defaultDependencies bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "DefaultDependencies").Store(&defaultDependencies)
	return
}

// GetOnFailureJobMode gets org.freedesktop.systemd1.Unit.OnFailureJobMode property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetOnFailureJobMode(ctx context.Context) (onFailureJobMode string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "OnFailureJobMode").Store(&onFailureJobMode)
	return
}

// GetIgnoreOnIsolate gets org.freedesktop.systemd1.Unit.IgnoreOnIsolate property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetIgnoreOnIsolate(ctx context.Context) (ignoreOnIsolate bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "IgnoreOnIsolate").Store(&ignoreOnIsolate)
	return
}

// GetNeedDaemonReload gets org.freedesktop.systemd1.Unit.NeedDaemonReload property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetNeedDaemonReload(ctx context.Context) (needDaemonReload bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "NeedDaemonReload").Store(&needDaemonReload)
	return
}

// GetJobTimeoutUSec gets org.freedesktop.systemd1.Unit.JobTimeoutUSec property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetJobTimeoutUSec(ctx context.Context) (jobTimeoutUSec uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "JobTimeoutUSec").Store(&jobTimeoutUSec)
	return
}

// GetJobRunningTimeoutUSec gets org.freedesktop.systemd1.Unit.JobRunningTimeoutUSec property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetJobRunningTimeoutUSec(ctx context.Context) (jobRunningTimeoutUSec uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "JobRunningTimeoutUSec").Store(&jobRunningTimeoutUSec)
	return
}

// GetJobTimeoutAction gets org.freedesktop.systemd1.Unit.JobTimeoutAction property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetJobTimeoutAction(ctx context.Context) (jobTimeoutAction string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "JobTimeoutAction").Store(&jobTimeoutAction)
	return
}

// GetJobTimeoutRebootArgument gets org.freedesktop.systemd1.Unit.JobTimeoutRebootArgument property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetJobTimeoutRebootArgument(ctx context.Context) (jobTimeoutRebootArgument string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "JobTimeoutRebootArgument").Store(&jobTimeoutRebootArgument)
	return
}

// GetConditionResult gets org.freedesktop.systemd1.Unit.ConditionResult property.
func (o *OrgFreedesktopSystemd1Unit) GetConditionResult(ctx context.Context) (conditionResult bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "ConditionResult").Store(&conditionResult)
	return
}

// GetAssertResult gets org.freedesktop.systemd1.Unit.AssertResult property.
func (o *OrgFreedesktopSystemd1Unit) GetAssertResult(ctx context.Context) (assertResult bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "AssertResult").Store(&assertResult)
	return
}

// GetConditionTimestamp gets org.freedesktop.systemd1.Unit.ConditionTimestamp property.
func (o *OrgFreedesktopSystemd1Unit) GetConditionTimestamp(ctx context.Context) (conditionTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "ConditionTimestamp").Store(&conditionTimestamp)
	return
}

// GetConditionTimestampMonotonic gets org.freedesktop.systemd1.Unit.ConditionTimestampMonotonic property.
func (o *OrgFreedesktopSystemd1Unit) GetConditionTimestampMonotonic(ctx context.Context) (conditionTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "ConditionTimestampMonotonic").Store(&conditionTimestampMonotonic)
	return
}

// GetAssertTimestamp gets org.freedesktop.systemd1.Unit.AssertTimestamp property.
func (o *OrgFreedesktopSystemd1Unit) GetAssertTimestamp(ctx context.Context) (assertTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "AssertTimestamp").Store(&assertTimestamp)
	return
}

// GetAssertTimestampMonotonic gets org.freedesktop.systemd1.Unit.AssertTimestampMonotonic property.
func (o *OrgFreedesktopSystemd1Unit) GetAssertTimestampMonotonic(ctx context.Context) (assertTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "AssertTimestampMonotonic").Store(&assertTimestampMonotonic)
	return
}

// GetConditions gets org.freedesktop.systemd1.Unit.Conditions property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = invalidates
func (o *OrgFreedesktopSystemd1Unit) GetConditions(ctx context.Context) (conditions []struct {
	V0 string
	V1 bool
	V2 bool
	V3 string
	V4 int32
}, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Conditions").Store(&conditions)
	return
}

// GetAsserts gets org.freedesktop.systemd1.Unit.Asserts property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = invalidates
func (o *OrgFreedesktopSystemd1Unit) GetAsserts(ctx context.Context) (asserts []struct {
	V0 string
	V1 bool
	V2 bool
	V3 string
	V4 int32
}, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Asserts").Store(&asserts)
	return
}

// GetLoadError gets org.freedesktop.systemd1.Unit.LoadError property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetLoadError(ctx context.Context) (loadError struct {
	V0 string
	V1 string
}, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "LoadError").Store(&loadError)
	return
}

// GetTransient gets org.freedesktop.systemd1.Unit.Transient property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetTransient(ctx context.Context) (transient bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Transient").Store(&transient)
	return
}

// GetPerpetual gets org.freedesktop.systemd1.Unit.Perpetual property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetPerpetual(ctx context.Context) (perpetual bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Perpetual").Store(&perpetual)
	return
}

// GetStartLimitIntervalUSec gets org.freedesktop.systemd1.Unit.StartLimitIntervalUSec property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetStartLimitIntervalUSec(ctx context.Context) (startLimitIntervalUSec uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "StartLimitIntervalUSec").Store(&startLimitIntervalUSec)
	return
}

// GetStartLimitBurst gets org.freedesktop.systemd1.Unit.StartLimitBurst property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetStartLimitBurst(ctx context.Context) (startLimitBurst uint32, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "StartLimitBurst").Store(&startLimitBurst)
	return
}

// GetStartLimitAction gets org.freedesktop.systemd1.Unit.StartLimitAction property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetStartLimitAction(ctx context.Context) (startLimitAction string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "StartLimitAction").Store(&startLimitAction)
	return
}

// GetFailureAction gets org.freedesktop.systemd1.Unit.FailureAction property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetFailureAction(ctx context.Context) (failureAction string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "FailureAction").Store(&failureAction)
	return
}

// GetFailureActionExitStatus gets org.freedesktop.systemd1.Unit.FailureActionExitStatus property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetFailureActionExitStatus(ctx context.Context) (failureActionExitStatus int32, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "FailureActionExitStatus").Store(&failureActionExitStatus)
	return
}

// GetSuccessAction gets org.freedesktop.systemd1.Unit.SuccessAction property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetSuccessAction(ctx context.Context) (successAction string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "SuccessAction").Store(&successAction)
	return
}

// GetSuccessActionExitStatus gets org.freedesktop.systemd1.Unit.SuccessActionExitStatus property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetSuccessActionExitStatus(ctx context.Context) (successActionExitStatus int32, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "SuccessActionExitStatus").Store(&successActionExitStatus)
	return
}

// GetRebootArgument gets org.freedesktop.systemd1.Unit.RebootArgument property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetRebootArgument(ctx context.Context) (rebootArgument string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "RebootArgument").Store(&rebootArgument)
	return
}

// GetInvocationID gets org.freedesktop.systemd1.Unit.InvocationID property.
func (o *OrgFreedesktopSystemd1Unit) GetInvocationID(ctx context.Context) (invocationID []byte, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "InvocationID").Store(&invocationID)
	return
}

// GetCollectMode gets org.freedesktop.systemd1.Unit.CollectMode property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Unit) GetCollectMode(ctx context.Context) (collectMode string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "CollectMode").Store(&collectMode)
	return
}

// GetRefs gets org.freedesktop.systemd1.Unit.Refs property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
func (o *OrgFreedesktopSystemd1Unit) GetRefs(ctx context.Context) (refs []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Unit, "Refs").Store(&refs)
	return
}

// NewOrgFreedesktopSystemd1Manager creates and allocates org.freedesktop.systemd1.Manager.
func NewOrgFreedesktopSystemd1Manager(object dbus.BusObject) *OrgFreedesktopSystemd1Manager {
	return &OrgFreedesktopSystemd1Manager{object}
}

// OrgFreedesktopSystemd1Manager implements org.freedesktop.systemd1.Manager D-Bus interface.
type OrgFreedesktopSystemd1Manager struct {
	object dbus.BusObject
}

// GetUnit calls org.freedesktop.systemd1.Manager.GetUnit method.
func (o *OrgFreedesktopSystemd1Manager) GetUnit(ctx context.Context, in0 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".GetUnit", 0, in0).Store(&out0)
	return
}

// GetUnitByPID calls org.freedesktop.systemd1.Manager.GetUnitByPID method.
func (o *OrgFreedesktopSystemd1Manager) GetUnitByPID(ctx context.Context, in0 uint32) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".GetUnitByPID", 0, in0).Store(&out0)
	return
}

// GetUnitByInvocationID calls org.freedesktop.systemd1.Manager.GetUnitByInvocationID method.
func (o *OrgFreedesktopSystemd1Manager) GetUnitByInvocationID(ctx context.Context, in0 []byte) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".GetUnitByInvocationID", 0, in0).Store(&out0)
	return
}

// GetUnitByControlGroup calls org.freedesktop.systemd1.Manager.GetUnitByControlGroup method.
func (o *OrgFreedesktopSystemd1Manager) GetUnitByControlGroup(ctx context.Context, in0 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".GetUnitByControlGroup", 0, in0).Store(&out0)
	return
}

// LoadUnit calls org.freedesktop.systemd1.Manager.LoadUnit method.
func (o *OrgFreedesktopSystemd1Manager) LoadUnit(ctx context.Context, in0 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".LoadUnit", 0, in0).Store(&out0)
	return
}

// StartUnit calls org.freedesktop.systemd1.Manager.StartUnit method.
func (o *OrgFreedesktopSystemd1Manager) StartUnit(ctx context.Context, in0 string, in1 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".StartUnit", 0, in0, in1).Store(&out0)
	return
}

// StartUnitReplace calls org.freedesktop.systemd1.Manager.StartUnitReplace method.
func (o *OrgFreedesktopSystemd1Manager) StartUnitReplace(ctx context.Context, in0 string, in1 string, in2 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".StartUnitReplace", 0, in0, in1, in2).Store(&out0)
	return
}

// StopUnit calls org.freedesktop.systemd1.Manager.StopUnit method.
func (o *OrgFreedesktopSystemd1Manager) StopUnit(ctx context.Context, in0 string, in1 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".StopUnit", 0, in0, in1).Store(&out0)
	return
}

// ReloadUnit calls org.freedesktop.systemd1.Manager.ReloadUnit method.
func (o *OrgFreedesktopSystemd1Manager) ReloadUnit(ctx context.Context, in0 string, in1 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".ReloadUnit", 0, in0, in1).Store(&out0)
	return
}

// RestartUnit calls org.freedesktop.systemd1.Manager.RestartUnit method.
func (o *OrgFreedesktopSystemd1Manager) RestartUnit(ctx context.Context, in0 string, in1 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".RestartUnit", 0, in0, in1).Store(&out0)
	return
}

// TryRestartUnit calls org.freedesktop.systemd1.Manager.TryRestartUnit method.
func (o *OrgFreedesktopSystemd1Manager) TryRestartUnit(ctx context.Context, in0 string, in1 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".TryRestartUnit", 0, in0, in1).Store(&out0)
	return
}

// ReloadOrRestartUnit calls org.freedesktop.systemd1.Manager.ReloadOrRestartUnit method.
func (o *OrgFreedesktopSystemd1Manager) ReloadOrRestartUnit(ctx context.Context, in0 string, in1 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".ReloadOrRestartUnit", 0, in0, in1).Store(&out0)
	return
}

// ReloadOrTryRestartUnit calls org.freedesktop.systemd1.Manager.ReloadOrTryRestartUnit method.
func (o *OrgFreedesktopSystemd1Manager) ReloadOrTryRestartUnit(ctx context.Context, in0 string, in1 string) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".ReloadOrTryRestartUnit", 0, in0, in1).Store(&out0)
	return
}

// EnqueueUnitJob calls org.freedesktop.systemd1.Manager.EnqueueUnitJob method.
func (o *OrgFreedesktopSystemd1Manager) EnqueueUnitJob(ctx context.Context, in0 string, in1 string, in2 string) (out0 uint32, out1 dbus.ObjectPath, out2 string, out3 dbus.ObjectPath, out4 string, out5 []struct {
	V0 uint32
	V1 dbus.ObjectPath
	V2 string
	V3 dbus.ObjectPath
	V4 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".EnqueueUnitJob", 0, in0, in1, in2).Store(&out0, &out1, &out2, &out3, &out4, &out5)
	return
}

// KillUnit calls org.freedesktop.systemd1.Manager.KillUnit method.
func (o *OrgFreedesktopSystemd1Manager) KillUnit(ctx context.Context, in0 string, in1 string, in2 int32) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".KillUnit", 0, in0, in1, in2).Store()
	return
}

// CleanUnit calls org.freedesktop.systemd1.Manager.CleanUnit method.
func (o *OrgFreedesktopSystemd1Manager) CleanUnit(ctx context.Context, in0 string, in1 []string) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".CleanUnit", 0, in0, in1).Store()
	return
}

// ResetFailedUnit calls org.freedesktop.systemd1.Manager.ResetFailedUnit method.
func (o *OrgFreedesktopSystemd1Manager) ResetFailedUnit(ctx context.Context, in0 string) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".ResetFailedUnit", 0, in0).Store()
	return
}

// SetUnitProperties calls org.freedesktop.systemd1.Manager.SetUnitProperties method.
func (o *OrgFreedesktopSystemd1Manager) SetUnitProperties(ctx context.Context, in0 string, in1 bool, in2 []struct {
	V0 string
	V1 dbus.Variant
}) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".SetUnitProperties", 0, in0, in1, in2).Store()
	return
}

// RefUnit calls org.freedesktop.systemd1.Manager.RefUnit method.
func (o *OrgFreedesktopSystemd1Manager) RefUnit(ctx context.Context, in0 string) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".RefUnit", 0, in0).Store()
	return
}

// UnrefUnit calls org.freedesktop.systemd1.Manager.UnrefUnit method.
func (o *OrgFreedesktopSystemd1Manager) UnrefUnit(ctx context.Context, in0 string) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".UnrefUnit", 0, in0).Store()
	return
}

// StartTransientUnit calls org.freedesktop.systemd1.Manager.StartTransientUnit method.
func (o *OrgFreedesktopSystemd1Manager) StartTransientUnit(ctx context.Context, in0 string, in1 string, in2 []struct {
	V0 string
	V1 dbus.Variant
}, in3 []struct {
	V0 string
	V1 []struct {
		V0 string
		V1 dbus.Variant
	}
}) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".StartTransientUnit", 0, in0, in1, in2, in3).Store(&out0)
	return
}

// GetUnitProcesses calls org.freedesktop.systemd1.Manager.GetUnitProcesses method.
func (o *OrgFreedesktopSystemd1Manager) GetUnitProcesses(ctx context.Context, in0 string) (out0 []struct {
	V0 string
	V1 uint32
	V2 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".GetUnitProcesses", 0, in0).Store(&out0)
	return
}

// AttachProcessesToUnit calls org.freedesktop.systemd1.Manager.AttachProcessesToUnit method.
func (o *OrgFreedesktopSystemd1Manager) AttachProcessesToUnit(ctx context.Context, in0 string, in1 string, in2 []uint32) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".AttachProcessesToUnit", 0, in0, in1, in2).Store()
	return
}

// AbandonScope calls org.freedesktop.systemd1.Manager.AbandonScope method.
func (o *OrgFreedesktopSystemd1Manager) AbandonScope(ctx context.Context, in0 string) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".AbandonScope", 0, in0).Store()
	return
}

// GetJob calls org.freedesktop.systemd1.Manager.GetJob method.
func (o *OrgFreedesktopSystemd1Manager) GetJob(ctx context.Context, in0 uint32) (out0 dbus.ObjectPath, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".GetJob", 0, in0).Store(&out0)
	return
}

// GetJobAfter calls org.freedesktop.systemd1.Manager.GetJobAfter method.
func (o *OrgFreedesktopSystemd1Manager) GetJobAfter(ctx context.Context, in0 uint32) (out0 []struct {
	V0 uint32
	V1 string
	V2 string
	V3 string
	V4 dbus.ObjectPath
	V5 dbus.ObjectPath
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".GetJobAfter", 0, in0).Store(&out0)
	return
}

// GetJobBefore calls org.freedesktop.systemd1.Manager.GetJobBefore method.
func (o *OrgFreedesktopSystemd1Manager) GetJobBefore(ctx context.Context, in0 uint32) (out0 []struct {
	V0 uint32
	V1 string
	V2 string
	V3 string
	V4 dbus.ObjectPath
	V5 dbus.ObjectPath
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".GetJobBefore", 0, in0).Store(&out0)
	return
}

// CancelJob calls org.freedesktop.systemd1.Manager.CancelJob method.
func (o *OrgFreedesktopSystemd1Manager) CancelJob(ctx context.Context, in0 uint32) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".CancelJob", 0, in0).Store()
	return
}

// ClearJobs calls org.freedesktop.systemd1.Manager.ClearJobs method.
func (o *OrgFreedesktopSystemd1Manager) ClearJobs(ctx context.Context) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".ClearJobs", 0).Store()
	return
}

// ResetFailed calls org.freedesktop.systemd1.Manager.ResetFailed method.
func (o *OrgFreedesktopSystemd1Manager) ResetFailed(ctx context.Context) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".ResetFailed", 0).Store()
	return
}

// ListUnits calls org.freedesktop.systemd1.Manager.ListUnits method.
func (o *OrgFreedesktopSystemd1Manager) ListUnits(ctx context.Context) (out0 []struct {
	V0 string
	V1 string
	V2 string
	V3 string
	V4 string
	V5 string
	V6 dbus.ObjectPath
	V7 uint32
	V8 string
	V9 dbus.ObjectPath
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".ListUnits", 0).Store(&out0)
	return
}

// ListUnitsFiltered calls org.freedesktop.systemd1.Manager.ListUnitsFiltered method.
func (o *OrgFreedesktopSystemd1Manager) ListUnitsFiltered(ctx context.Context, in0 []string) (out0 []struct {
	V0 string
	V1 string
	V2 string
	V3 string
	V4 string
	V5 string
	V6 dbus.ObjectPath
	V7 uint32
	V8 string
	V9 dbus.ObjectPath
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".ListUnitsFiltered", 0, in0).Store(&out0)
	return
}

// ListUnitsByPatterns calls org.freedesktop.systemd1.Manager.ListUnitsByPatterns method.
func (o *OrgFreedesktopSystemd1Manager) ListUnitsByPatterns(ctx context.Context, in0 []string, in1 []string) (out0 []struct {
	V0 string
	V1 string
	V2 string
	V3 string
	V4 string
	V5 string
	V6 dbus.ObjectPath
	V7 uint32
	V8 string
	V9 dbus.ObjectPath
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".ListUnitsByPatterns", 0, in0, in1).Store(&out0)
	return
}

// ListUnitsByNames calls org.freedesktop.systemd1.Manager.ListUnitsByNames method.
func (o *OrgFreedesktopSystemd1Manager) ListUnitsByNames(ctx context.Context, in0 []string) (out0 []struct {
	V0 string
	V1 string
	V2 string
	V3 string
	V4 string
	V5 string
	V6 dbus.ObjectPath
	V7 uint32
	V8 string
	V9 dbus.ObjectPath
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".ListUnitsByNames", 0, in0).Store(&out0)
	return
}

// ListJobs calls org.freedesktop.systemd1.Manager.ListJobs method.
func (o *OrgFreedesktopSystemd1Manager) ListJobs(ctx context.Context) (out0 []struct {
	V0 uint32
	V1 string
	V2 string
	V3 string
	V4 dbus.ObjectPath
	V5 dbus.ObjectPath
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".ListJobs", 0).Store(&out0)
	return
}

// Subscribe calls org.freedesktop.systemd1.Manager.Subscribe method.
func (o *OrgFreedesktopSystemd1Manager) Subscribe(ctx context.Context) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".Subscribe", 0).Store()
	return
}

// Unsubscribe calls org.freedesktop.systemd1.Manager.Unsubscribe method.
func (o *OrgFreedesktopSystemd1Manager) Unsubscribe(ctx context.Context) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".Unsubscribe", 0).Store()
	return
}

// Dump calls org.freedesktop.systemd1.Manager.Dump method.
func (o *OrgFreedesktopSystemd1Manager) Dump(ctx context.Context) (out0 string, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".Dump", 0).Store(&out0)
	return
}

// DumpByFileDescriptor calls org.freedesktop.systemd1.Manager.DumpByFileDescriptor method.
func (o *OrgFreedesktopSystemd1Manager) DumpByFileDescriptor(ctx context.Context) (out0 dbus.UnixFD, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".DumpByFileDescriptor", 0).Store(&out0)
	return
}

// Reload calls org.freedesktop.systemd1.Manager.Reload method.
func (o *OrgFreedesktopSystemd1Manager) Reload(ctx context.Context) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".Reload", 0).Store()
	return
}

// Reexecute calls org.freedesktop.systemd1.Manager.Reexecute method.
func (o *OrgFreedesktopSystemd1Manager) Reexecute(ctx context.Context) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".Reexecute", 0).Store()
	return
}

// Exit calls org.freedesktop.systemd1.Manager.Exit method.
//
// Annotations:
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) Exit(ctx context.Context) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".Exit", 0).Store()
	return
}

// Reboot calls org.freedesktop.systemd1.Manager.Reboot method.
//
// Annotations:
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) Reboot(ctx context.Context) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".Reboot", 0).Store()
	return
}

// PowerOff calls org.freedesktop.systemd1.Manager.PowerOff method.
//
// Annotations:
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) PowerOff(ctx context.Context) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".PowerOff", 0).Store()
	return
}

// Halt calls org.freedesktop.systemd1.Manager.Halt method.
//
// Annotations:
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) Halt(ctx context.Context) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".Halt", 0).Store()
	return
}

// KExec calls org.freedesktop.systemd1.Manager.KExec method.
//
// Annotations:
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) KExec(ctx context.Context) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".KExec", 0).Store()
	return
}

// SwitchRoot calls org.freedesktop.systemd1.Manager.SwitchRoot method.
//
// Annotations:
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) SwitchRoot(ctx context.Context, in0 string, in1 string) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".SwitchRoot", 0, in0, in1).Store()
	return
}

// SetEnvironment calls org.freedesktop.systemd1.Manager.SetEnvironment method.
func (o *OrgFreedesktopSystemd1Manager) SetEnvironment(ctx context.Context, in0 []string) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".SetEnvironment", 0, in0).Store()
	return
}

// UnsetEnvironment calls org.freedesktop.systemd1.Manager.UnsetEnvironment method.
func (o *OrgFreedesktopSystemd1Manager) UnsetEnvironment(ctx context.Context, in0 []string) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".UnsetEnvironment", 0, in0).Store()
	return
}

// UnsetAndSetEnvironment calls org.freedesktop.systemd1.Manager.UnsetAndSetEnvironment method.
func (o *OrgFreedesktopSystemd1Manager) UnsetAndSetEnvironment(ctx context.Context, in0 []string, in1 []string) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".UnsetAndSetEnvironment", 0, in0, in1).Store()
	return
}

// ListUnitFiles calls org.freedesktop.systemd1.Manager.ListUnitFiles method.
func (o *OrgFreedesktopSystemd1Manager) ListUnitFiles(ctx context.Context) (out0 []struct {
	V0 string
	V1 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".ListUnitFiles", 0).Store(&out0)
	return
}

// ListUnitFilesByPatterns calls org.freedesktop.systemd1.Manager.ListUnitFilesByPatterns method.
func (o *OrgFreedesktopSystemd1Manager) ListUnitFilesByPatterns(ctx context.Context, in0 []string, in1 []string) (out0 []struct {
	V0 string
	V1 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".ListUnitFilesByPatterns", 0, in0, in1).Store(&out0)
	return
}

// GetUnitFileState calls org.freedesktop.systemd1.Manager.GetUnitFileState method.
func (o *OrgFreedesktopSystemd1Manager) GetUnitFileState(ctx context.Context, in0 string) (out0 string, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".GetUnitFileState", 0, in0).Store(&out0)
	return
}

// EnableUnitFiles calls org.freedesktop.systemd1.Manager.EnableUnitFiles method.
func (o *OrgFreedesktopSystemd1Manager) EnableUnitFiles(ctx context.Context, in0 []string, in1 bool, in2 bool) (out0 bool, out1 []struct {
	V0 string
	V1 string
	V2 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".EnableUnitFiles", 0, in0, in1, in2).Store(&out0, &out1)
	return
}

// DisableUnitFiles calls org.freedesktop.systemd1.Manager.DisableUnitFiles method.
func (o *OrgFreedesktopSystemd1Manager) DisableUnitFiles(ctx context.Context, in0 []string, in1 bool) (out0 []struct {
	V0 string
	V1 string
	V2 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".DisableUnitFiles", 0, in0, in1).Store(&out0)
	return
}

// ReenableUnitFiles calls org.freedesktop.systemd1.Manager.ReenableUnitFiles method.
func (o *OrgFreedesktopSystemd1Manager) ReenableUnitFiles(ctx context.Context, in0 []string, in1 bool, in2 bool) (out0 bool, out1 []struct {
	V0 string
	V1 string
	V2 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".ReenableUnitFiles", 0, in0, in1, in2).Store(&out0, &out1)
	return
}

// LinkUnitFiles calls org.freedesktop.systemd1.Manager.LinkUnitFiles method.
func (o *OrgFreedesktopSystemd1Manager) LinkUnitFiles(ctx context.Context, in0 []string, in1 bool, in2 bool) (out0 []struct {
	V0 string
	V1 string
	V2 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".LinkUnitFiles", 0, in0, in1, in2).Store(&out0)
	return
}

// PresetUnitFiles calls org.freedesktop.systemd1.Manager.PresetUnitFiles method.
func (o *OrgFreedesktopSystemd1Manager) PresetUnitFiles(ctx context.Context, in0 []string, in1 bool, in2 bool) (out0 bool, out1 []struct {
	V0 string
	V1 string
	V2 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".PresetUnitFiles", 0, in0, in1, in2).Store(&out0, &out1)
	return
}

// PresetUnitFilesWithMode calls org.freedesktop.systemd1.Manager.PresetUnitFilesWithMode method.
func (o *OrgFreedesktopSystemd1Manager) PresetUnitFilesWithMode(ctx context.Context, in0 []string, in1 string, in2 bool, in3 bool) (out0 bool, out1 []struct {
	V0 string
	V1 string
	V2 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".PresetUnitFilesWithMode", 0, in0, in1, in2, in3).Store(&out0, &out1)
	return
}

// MaskUnitFiles calls org.freedesktop.systemd1.Manager.MaskUnitFiles method.
func (o *OrgFreedesktopSystemd1Manager) MaskUnitFiles(ctx context.Context, in0 []string, in1 bool, in2 bool) (out0 []struct {
	V0 string
	V1 string
	V2 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".MaskUnitFiles", 0, in0, in1, in2).Store(&out0)
	return
}

// UnmaskUnitFiles calls org.freedesktop.systemd1.Manager.UnmaskUnitFiles method.
func (o *OrgFreedesktopSystemd1Manager) UnmaskUnitFiles(ctx context.Context, in0 []string, in1 bool) (out0 []struct {
	V0 string
	V1 string
	V2 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".UnmaskUnitFiles", 0, in0, in1).Store(&out0)
	return
}

// RevertUnitFiles calls org.freedesktop.systemd1.Manager.RevertUnitFiles method.
func (o *OrgFreedesktopSystemd1Manager) RevertUnitFiles(ctx context.Context, in0 []string) (out0 []struct {
	V0 string
	V1 string
	V2 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".RevertUnitFiles", 0, in0).Store(&out0)
	return
}

// SetDefaultTarget calls org.freedesktop.systemd1.Manager.SetDefaultTarget method.
func (o *OrgFreedesktopSystemd1Manager) SetDefaultTarget(ctx context.Context, in0 string, in1 bool) (out0 []struct {
	V0 string
	V1 string
	V2 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".SetDefaultTarget", 0, in0, in1).Store(&out0)
	return
}

// GetDefaultTarget calls org.freedesktop.systemd1.Manager.GetDefaultTarget method.
func (o *OrgFreedesktopSystemd1Manager) GetDefaultTarget(ctx context.Context) (out0 string, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".GetDefaultTarget", 0).Store(&out0)
	return
}

// PresetAllUnitFiles calls org.freedesktop.systemd1.Manager.PresetAllUnitFiles method.
func (o *OrgFreedesktopSystemd1Manager) PresetAllUnitFiles(ctx context.Context, in0 string, in1 bool, in2 bool) (out0 []struct {
	V0 string
	V1 string
	V2 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".PresetAllUnitFiles", 0, in0, in1, in2).Store(&out0)
	return
}

// AddDependencyUnitFiles calls org.freedesktop.systemd1.Manager.AddDependencyUnitFiles method.
func (o *OrgFreedesktopSystemd1Manager) AddDependencyUnitFiles(ctx context.Context, in0 []string, in1 string, in2 string, in3 bool, in4 bool) (out0 []struct {
	V0 string
	V1 string
	V2 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".AddDependencyUnitFiles", 0, in0, in1, in2, in3, in4).Store(&out0)
	return
}

// GetUnitFileLinks calls org.freedesktop.systemd1.Manager.GetUnitFileLinks method.
func (o *OrgFreedesktopSystemd1Manager) GetUnitFileLinks(ctx context.Context, in0 string, in1 bool) (out0 []string, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".GetUnitFileLinks", 0, in0, in1).Store(&out0)
	return
}

// SetExitCode calls org.freedesktop.systemd1.Manager.SetExitCode method.
func (o *OrgFreedesktopSystemd1Manager) SetExitCode(ctx context.Context, in0 byte) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".SetExitCode", 0, in0).Store()
	return
}

// LookupDynamicUserByName calls org.freedesktop.systemd1.Manager.LookupDynamicUserByName method.
func (o *OrgFreedesktopSystemd1Manager) LookupDynamicUserByName(ctx context.Context, in0 string) (out0 uint32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".LookupDynamicUserByName", 0, in0).Store(&out0)
	return
}

// LookupDynamicUserByUID calls org.freedesktop.systemd1.Manager.LookupDynamicUserByUID method.
func (o *OrgFreedesktopSystemd1Manager) LookupDynamicUserByUID(ctx context.Context, in0 uint32) (out0 string, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".LookupDynamicUserByUID", 0, in0).Store(&out0)
	return
}

// GetDynamicUsers calls org.freedesktop.systemd1.Manager.GetDynamicUsers method.
func (o *OrgFreedesktopSystemd1Manager) GetDynamicUsers(ctx context.Context) (out0 []struct {
	V0 uint32
	V1 string
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrgFreedesktopSystemd1Manager+".GetDynamicUsers", 0).Store(&out0)
	return
}

// GetVersion gets org.freedesktop.systemd1.Manager.Version property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetVersion(ctx context.Context) (version string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "Version").Store(&version)
	return
}

// GetFeatures gets org.freedesktop.systemd1.Manager.Features property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetFeatures(ctx context.Context) (features string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "Features").Store(&features)
	return
}

// GetVirtualization gets org.freedesktop.systemd1.Manager.Virtualization property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetVirtualization(ctx context.Context) (virtualization string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "Virtualization").Store(&virtualization)
	return
}

// GetArchitecture gets org.freedesktop.systemd1.Manager.Architecture property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetArchitecture(ctx context.Context) (architecture string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "Architecture").Store(&architecture)
	return
}

// GetTainted gets org.freedesktop.systemd1.Manager.Tainted property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetTainted(ctx context.Context) (tainted string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "Tainted").Store(&tainted)
	return
}

// GetFirmwareTimestamp gets org.freedesktop.systemd1.Manager.FirmwareTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetFirmwareTimestamp(ctx context.Context) (firmwareTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "FirmwareTimestamp").Store(&firmwareTimestamp)
	return
}

// GetFirmwareTimestampMonotonic gets org.freedesktop.systemd1.Manager.FirmwareTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetFirmwareTimestampMonotonic(ctx context.Context) (firmwareTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "FirmwareTimestampMonotonic").Store(&firmwareTimestampMonotonic)
	return
}

// GetLoaderTimestamp gets org.freedesktop.systemd1.Manager.LoaderTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetLoaderTimestamp(ctx context.Context) (loaderTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "LoaderTimestamp").Store(&loaderTimestamp)
	return
}

// GetLoaderTimestampMonotonic gets org.freedesktop.systemd1.Manager.LoaderTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetLoaderTimestampMonotonic(ctx context.Context) (loaderTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "LoaderTimestampMonotonic").Store(&loaderTimestampMonotonic)
	return
}

// GetKernelTimestamp gets org.freedesktop.systemd1.Manager.KernelTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetKernelTimestamp(ctx context.Context) (kernelTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "KernelTimestamp").Store(&kernelTimestamp)
	return
}

// GetKernelTimestampMonotonic gets org.freedesktop.systemd1.Manager.KernelTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetKernelTimestampMonotonic(ctx context.Context) (kernelTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "KernelTimestampMonotonic").Store(&kernelTimestampMonotonic)
	return
}

// GetInitRDTimestamp gets org.freedesktop.systemd1.Manager.InitRDTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetInitRDTimestamp(ctx context.Context) (initRDTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "InitRDTimestamp").Store(&initRDTimestamp)
	return
}

// GetInitRDTimestampMonotonic gets org.freedesktop.systemd1.Manager.InitRDTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetInitRDTimestampMonotonic(ctx context.Context) (initRDTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "InitRDTimestampMonotonic").Store(&initRDTimestampMonotonic)
	return
}

// GetUserspaceTimestamp gets org.freedesktop.systemd1.Manager.UserspaceTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetUserspaceTimestamp(ctx context.Context) (userspaceTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "UserspaceTimestamp").Store(&userspaceTimestamp)
	return
}

// GetUserspaceTimestampMonotonic gets org.freedesktop.systemd1.Manager.UserspaceTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetUserspaceTimestampMonotonic(ctx context.Context) (userspaceTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "UserspaceTimestampMonotonic").Store(&userspaceTimestampMonotonic)
	return
}

// GetFinishTimestamp gets org.freedesktop.systemd1.Manager.FinishTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetFinishTimestamp(ctx context.Context) (finishTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "FinishTimestamp").Store(&finishTimestamp)
	return
}

// GetFinishTimestampMonotonic gets org.freedesktop.systemd1.Manager.FinishTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetFinishTimestampMonotonic(ctx context.Context) (finishTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "FinishTimestampMonotonic").Store(&finishTimestampMonotonic)
	return
}

// GetSecurityStartTimestamp gets org.freedesktop.systemd1.Manager.SecurityStartTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetSecurityStartTimestamp(ctx context.Context) (securityStartTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "SecurityStartTimestamp").Store(&securityStartTimestamp)
	return
}

// GetSecurityStartTimestampMonotonic gets org.freedesktop.systemd1.Manager.SecurityStartTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetSecurityStartTimestampMonotonic(ctx context.Context) (securityStartTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "SecurityStartTimestampMonotonic").Store(&securityStartTimestampMonotonic)
	return
}

// GetSecurityFinishTimestamp gets org.freedesktop.systemd1.Manager.SecurityFinishTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetSecurityFinishTimestamp(ctx context.Context) (securityFinishTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "SecurityFinishTimestamp").Store(&securityFinishTimestamp)
	return
}

// GetSecurityFinishTimestampMonotonic gets org.freedesktop.systemd1.Manager.SecurityFinishTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetSecurityFinishTimestampMonotonic(ctx context.Context) (securityFinishTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "SecurityFinishTimestampMonotonic").Store(&securityFinishTimestampMonotonic)
	return
}

// GetGeneratorsStartTimestamp gets org.freedesktop.systemd1.Manager.GeneratorsStartTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetGeneratorsStartTimestamp(ctx context.Context) (generatorsStartTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "GeneratorsStartTimestamp").Store(&generatorsStartTimestamp)
	return
}

// GetGeneratorsStartTimestampMonotonic gets org.freedesktop.systemd1.Manager.GeneratorsStartTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetGeneratorsStartTimestampMonotonic(ctx context.Context) (generatorsStartTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "GeneratorsStartTimestampMonotonic").Store(&generatorsStartTimestampMonotonic)
	return
}

// GetGeneratorsFinishTimestamp gets org.freedesktop.systemd1.Manager.GeneratorsFinishTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetGeneratorsFinishTimestamp(ctx context.Context) (generatorsFinishTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "GeneratorsFinishTimestamp").Store(&generatorsFinishTimestamp)
	return
}

// GetGeneratorsFinishTimestampMonotonic gets org.freedesktop.systemd1.Manager.GeneratorsFinishTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetGeneratorsFinishTimestampMonotonic(ctx context.Context) (generatorsFinishTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "GeneratorsFinishTimestampMonotonic").Store(&generatorsFinishTimestampMonotonic)
	return
}

// GetUnitsLoadStartTimestamp gets org.freedesktop.systemd1.Manager.UnitsLoadStartTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetUnitsLoadStartTimestamp(ctx context.Context) (unitsLoadStartTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "UnitsLoadStartTimestamp").Store(&unitsLoadStartTimestamp)
	return
}

// GetUnitsLoadStartTimestampMonotonic gets org.freedesktop.systemd1.Manager.UnitsLoadStartTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetUnitsLoadStartTimestampMonotonic(ctx context.Context) (unitsLoadStartTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "UnitsLoadStartTimestampMonotonic").Store(&unitsLoadStartTimestampMonotonic)
	return
}

// GetUnitsLoadFinishTimestamp gets org.freedesktop.systemd1.Manager.UnitsLoadFinishTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetUnitsLoadFinishTimestamp(ctx context.Context) (unitsLoadFinishTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "UnitsLoadFinishTimestamp").Store(&unitsLoadFinishTimestamp)
	return
}

// GetUnitsLoadFinishTimestampMonotonic gets org.freedesktop.systemd1.Manager.UnitsLoadFinishTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetUnitsLoadFinishTimestampMonotonic(ctx context.Context) (unitsLoadFinishTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "UnitsLoadFinishTimestampMonotonic").Store(&unitsLoadFinishTimestampMonotonic)
	return
}

// GetInitRDSecurityStartTimestamp gets org.freedesktop.systemd1.Manager.InitRDSecurityStartTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetInitRDSecurityStartTimestamp(ctx context.Context) (initRDSecurityStartTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "InitRDSecurityStartTimestamp").Store(&initRDSecurityStartTimestamp)
	return
}

// GetInitRDSecurityStartTimestampMonotonic gets org.freedesktop.systemd1.Manager.InitRDSecurityStartTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetInitRDSecurityStartTimestampMonotonic(ctx context.Context) (initRDSecurityStartTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "InitRDSecurityStartTimestampMonotonic").Store(&initRDSecurityStartTimestampMonotonic)
	return
}

// GetInitRDSecurityFinishTimestamp gets org.freedesktop.systemd1.Manager.InitRDSecurityFinishTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetInitRDSecurityFinishTimestamp(ctx context.Context) (initRDSecurityFinishTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "InitRDSecurityFinishTimestamp").Store(&initRDSecurityFinishTimestamp)
	return
}

// GetInitRDSecurityFinishTimestampMonotonic gets org.freedesktop.systemd1.Manager.InitRDSecurityFinishTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetInitRDSecurityFinishTimestampMonotonic(ctx context.Context) (initRDSecurityFinishTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "InitRDSecurityFinishTimestampMonotonic").Store(&initRDSecurityFinishTimestampMonotonic)
	return
}

// GetInitRDGeneratorsStartTimestamp gets org.freedesktop.systemd1.Manager.InitRDGeneratorsStartTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetInitRDGeneratorsStartTimestamp(ctx context.Context) (initRDGeneratorsStartTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "InitRDGeneratorsStartTimestamp").Store(&initRDGeneratorsStartTimestamp)
	return
}

// GetInitRDGeneratorsStartTimestampMonotonic gets org.freedesktop.systemd1.Manager.InitRDGeneratorsStartTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetInitRDGeneratorsStartTimestampMonotonic(ctx context.Context) (initRDGeneratorsStartTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "InitRDGeneratorsStartTimestampMonotonic").Store(&initRDGeneratorsStartTimestampMonotonic)
	return
}

// GetInitRDGeneratorsFinishTimestamp gets org.freedesktop.systemd1.Manager.InitRDGeneratorsFinishTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetInitRDGeneratorsFinishTimestamp(ctx context.Context) (initRDGeneratorsFinishTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "InitRDGeneratorsFinishTimestamp").Store(&initRDGeneratorsFinishTimestamp)
	return
}

// GetInitRDGeneratorsFinishTimestampMonotonic gets org.freedesktop.systemd1.Manager.InitRDGeneratorsFinishTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetInitRDGeneratorsFinishTimestampMonotonic(ctx context.Context) (initRDGeneratorsFinishTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "InitRDGeneratorsFinishTimestampMonotonic").Store(&initRDGeneratorsFinishTimestampMonotonic)
	return
}

// GetInitRDUnitsLoadStartTimestamp gets org.freedesktop.systemd1.Manager.InitRDUnitsLoadStartTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetInitRDUnitsLoadStartTimestamp(ctx context.Context) (initRDUnitsLoadStartTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "InitRDUnitsLoadStartTimestamp").Store(&initRDUnitsLoadStartTimestamp)
	return
}

// GetInitRDUnitsLoadStartTimestampMonotonic gets org.freedesktop.systemd1.Manager.InitRDUnitsLoadStartTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetInitRDUnitsLoadStartTimestampMonotonic(ctx context.Context) (initRDUnitsLoadStartTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "InitRDUnitsLoadStartTimestampMonotonic").Store(&initRDUnitsLoadStartTimestampMonotonic)
	return
}

// GetInitRDUnitsLoadFinishTimestamp gets org.freedesktop.systemd1.Manager.InitRDUnitsLoadFinishTimestamp property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetInitRDUnitsLoadFinishTimestamp(ctx context.Context) (initRDUnitsLoadFinishTimestamp uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "InitRDUnitsLoadFinishTimestamp").Store(&initRDUnitsLoadFinishTimestamp)
	return
}

// GetInitRDUnitsLoadFinishTimestampMonotonic gets org.freedesktop.systemd1.Manager.InitRDUnitsLoadFinishTimestampMonotonic property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetInitRDUnitsLoadFinishTimestampMonotonic(ctx context.Context) (initRDUnitsLoadFinishTimestampMonotonic uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "InitRDUnitsLoadFinishTimestampMonotonic").Store(&initRDUnitsLoadFinishTimestampMonotonic)
	return
}

// GetLogLevel gets org.freedesktop.systemd1.Manager.LogLevel property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) GetLogLevel(ctx context.Context) (logLevel string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "LogLevel").Store(&logLevel)
	return
}

// SetLogLevel sets org.freedesktop.systemd1.Manager.LogLevel property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) SetLogLevel(ctx context.Context, logLevel string) error {
	return o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Set", 0, InterfaceOrgFreedesktopSystemd1Manager, "LogLevel", dbus.MakeVariant(logLevel)).Store()
}

// GetLogTarget gets org.freedesktop.systemd1.Manager.LogTarget property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) GetLogTarget(ctx context.Context) (logTarget string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "LogTarget").Store(&logTarget)
	return
}

// SetLogTarget sets org.freedesktop.systemd1.Manager.LogTarget property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) SetLogTarget(ctx context.Context, logTarget string) error {
	return o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Set", 0, InterfaceOrgFreedesktopSystemd1Manager, "LogTarget", dbus.MakeVariant(logTarget)).Store()
}

// GetNNames gets org.freedesktop.systemd1.Manager.NNames property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
func (o *OrgFreedesktopSystemd1Manager) GetNNames(ctx context.Context) (nNames uint32, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "NNames").Store(&nNames)
	return
}

// GetNFailedUnits gets org.freedesktop.systemd1.Manager.NFailedUnits property.
func (o *OrgFreedesktopSystemd1Manager) GetNFailedUnits(ctx context.Context) (nFailedUnits uint32, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "NFailedUnits").Store(&nFailedUnits)
	return
}

// GetNJobs gets org.freedesktop.systemd1.Manager.NJobs property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
func (o *OrgFreedesktopSystemd1Manager) GetNJobs(ctx context.Context) (nJobs uint32, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "NJobs").Store(&nJobs)
	return
}

// GetNInstalledJobs gets org.freedesktop.systemd1.Manager.NInstalledJobs property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
func (o *OrgFreedesktopSystemd1Manager) GetNInstalledJobs(ctx context.Context) (nInstalledJobs uint32, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "NInstalledJobs").Store(&nInstalledJobs)
	return
}

// GetNFailedJobs gets org.freedesktop.systemd1.Manager.NFailedJobs property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
func (o *OrgFreedesktopSystemd1Manager) GetNFailedJobs(ctx context.Context) (nFailedJobs uint32, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "NFailedJobs").Store(&nFailedJobs)
	return
}

// GetProgress gets org.freedesktop.systemd1.Manager.Progress property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
func (o *OrgFreedesktopSystemd1Manager) GetProgress(ctx context.Context) (progress float64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "Progress").Store(&progress)
	return
}

// GetEnvironment gets org.freedesktop.systemd1.Manager.Environment property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
func (o *OrgFreedesktopSystemd1Manager) GetEnvironment(ctx context.Context) (environment []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "Environment").Store(&environment)
	return
}

// GetConfirmSpawn gets org.freedesktop.systemd1.Manager.ConfirmSpawn property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetConfirmSpawn(ctx context.Context) (confirmSpawn bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "ConfirmSpawn").Store(&confirmSpawn)
	return
}

// GetShowStatus gets org.freedesktop.systemd1.Manager.ShowStatus property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
func (o *OrgFreedesktopSystemd1Manager) GetShowStatus(ctx context.Context) (showStatus bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "ShowStatus").Store(&showStatus)
	return
}

// GetUnitPath gets org.freedesktop.systemd1.Manager.UnitPath property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetUnitPath(ctx context.Context) (unitPath []string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "UnitPath").Store(&unitPath)
	return
}

// GetDefaultStandardOutput gets org.freedesktop.systemd1.Manager.DefaultStandardOutput property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultStandardOutput(ctx context.Context) (defaultStandardOutput string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultStandardOutput").Store(&defaultStandardOutput)
	return
}

// GetDefaultStandardError gets org.freedesktop.systemd1.Manager.DefaultStandardError property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultStandardError(ctx context.Context) (defaultStandardError string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultStandardError").Store(&defaultStandardError)
	return
}

// GetRuntimeWatchdogUSec gets org.freedesktop.systemd1.Manager.RuntimeWatchdogUSec property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) GetRuntimeWatchdogUSec(ctx context.Context) (runtimeWatchdogUSec uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "RuntimeWatchdogUSec").Store(&runtimeWatchdogUSec)
	return
}

// SetRuntimeWatchdogUSec sets org.freedesktop.systemd1.Manager.RuntimeWatchdogUSec property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) SetRuntimeWatchdogUSec(ctx context.Context, runtimeWatchdogUSec uint64) error {
	return o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Set", 0, InterfaceOrgFreedesktopSystemd1Manager, "RuntimeWatchdogUSec", dbus.MakeVariant(runtimeWatchdogUSec)).Store()
}

// GetRebootWatchdogUSec gets org.freedesktop.systemd1.Manager.RebootWatchdogUSec property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) GetRebootWatchdogUSec(ctx context.Context) (rebootWatchdogUSec uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "RebootWatchdogUSec").Store(&rebootWatchdogUSec)
	return
}

// SetRebootWatchdogUSec sets org.freedesktop.systemd1.Manager.RebootWatchdogUSec property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) SetRebootWatchdogUSec(ctx context.Context, rebootWatchdogUSec uint64) error {
	return o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Set", 0, InterfaceOrgFreedesktopSystemd1Manager, "RebootWatchdogUSec", dbus.MakeVariant(rebootWatchdogUSec)).Store()
}

// GetKExecWatchdogUSec gets org.freedesktop.systemd1.Manager.KExecWatchdogUSec property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) GetKExecWatchdogUSec(ctx context.Context) (kExecWatchdogUSec uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "KExecWatchdogUSec").Store(&kExecWatchdogUSec)
	return
}

// SetKExecWatchdogUSec sets org.freedesktop.systemd1.Manager.KExecWatchdogUSec property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) SetKExecWatchdogUSec(ctx context.Context, kExecWatchdogUSec uint64) error {
	return o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Set", 0, InterfaceOrgFreedesktopSystemd1Manager, "KExecWatchdogUSec", dbus.MakeVariant(kExecWatchdogUSec)).Store()
}

// GetServiceWatchdogs gets org.freedesktop.systemd1.Manager.ServiceWatchdogs property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) GetServiceWatchdogs(ctx context.Context) (serviceWatchdogs bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "ServiceWatchdogs").Store(&serviceWatchdogs)
	return
}

// SetServiceWatchdogs sets org.freedesktop.systemd1.Manager.ServiceWatchdogs property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
//   @org.freedesktop.systemd1.Privileged = true
func (o *OrgFreedesktopSystemd1Manager) SetServiceWatchdogs(ctx context.Context, serviceWatchdogs bool) error {
	return o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Set", 0, InterfaceOrgFreedesktopSystemd1Manager, "ServiceWatchdogs", dbus.MakeVariant(serviceWatchdogs)).Store()
}

// GetControlGroup gets org.freedesktop.systemd1.Manager.ControlGroup property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
func (o *OrgFreedesktopSystemd1Manager) GetControlGroup(ctx context.Context) (controlGroup string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "ControlGroup").Store(&controlGroup)
	return
}

// GetSystemState gets org.freedesktop.systemd1.Manager.SystemState property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
func (o *OrgFreedesktopSystemd1Manager) GetSystemState(ctx context.Context) (systemState string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "SystemState").Store(&systemState)
	return
}

// GetExitCode gets org.freedesktop.systemd1.Manager.ExitCode property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
func (o *OrgFreedesktopSystemd1Manager) GetExitCode(ctx context.Context) (exitCode byte, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "ExitCode").Store(&exitCode)
	return
}

// GetDefaultTimerAccuracyUSec gets org.freedesktop.systemd1.Manager.DefaultTimerAccuracyUSec property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultTimerAccuracyUSec(ctx context.Context) (defaultTimerAccuracyUSec uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultTimerAccuracyUSec").Store(&defaultTimerAccuracyUSec)
	return
}

// GetDefaultTimeoutStartUSec gets org.freedesktop.systemd1.Manager.DefaultTimeoutStartUSec property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultTimeoutStartUSec(ctx context.Context) (defaultTimeoutStartUSec uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultTimeoutStartUSec").Store(&defaultTimeoutStartUSec)
	return
}

// GetDefaultTimeoutStopUSec gets org.freedesktop.systemd1.Manager.DefaultTimeoutStopUSec property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultTimeoutStopUSec(ctx context.Context) (defaultTimeoutStopUSec uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultTimeoutStopUSec").Store(&defaultTimeoutStopUSec)
	return
}

// GetDefaultTimeoutAbortUSec gets org.freedesktop.systemd1.Manager.DefaultTimeoutAbortUSec property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = false
func (o *OrgFreedesktopSystemd1Manager) GetDefaultTimeoutAbortUSec(ctx context.Context) (defaultTimeoutAbortUSec uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultTimeoutAbortUSec").Store(&defaultTimeoutAbortUSec)
	return
}

// GetDefaultRestartUSec gets org.freedesktop.systemd1.Manager.DefaultRestartUSec property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultRestartUSec(ctx context.Context) (defaultRestartUSec uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultRestartUSec").Store(&defaultRestartUSec)
	return
}

// GetDefaultStartLimitIntervalUSec gets org.freedesktop.systemd1.Manager.DefaultStartLimitIntervalUSec property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultStartLimitIntervalUSec(ctx context.Context) (defaultStartLimitIntervalUSec uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultStartLimitIntervalUSec").Store(&defaultStartLimitIntervalUSec)
	return
}

// GetDefaultStartLimitBurst gets org.freedesktop.systemd1.Manager.DefaultStartLimitBurst property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultStartLimitBurst(ctx context.Context) (defaultStartLimitBurst uint32, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultStartLimitBurst").Store(&defaultStartLimitBurst)
	return
}

// GetDefaultCPUAccounting gets org.freedesktop.systemd1.Manager.DefaultCPUAccounting property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultCPUAccounting(ctx context.Context) (defaultCPUAccounting bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultCPUAccounting").Store(&defaultCPUAccounting)
	return
}

// GetDefaultBlockIOAccounting gets org.freedesktop.systemd1.Manager.DefaultBlockIOAccounting property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultBlockIOAccounting(ctx context.Context) (defaultBlockIOAccounting bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultBlockIOAccounting").Store(&defaultBlockIOAccounting)
	return
}

// GetDefaultMemoryAccounting gets org.freedesktop.systemd1.Manager.DefaultMemoryAccounting property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultMemoryAccounting(ctx context.Context) (defaultMemoryAccounting bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultMemoryAccounting").Store(&defaultMemoryAccounting)
	return
}

// GetDefaultTasksAccounting gets org.freedesktop.systemd1.Manager.DefaultTasksAccounting property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultTasksAccounting(ctx context.Context) (defaultTasksAccounting bool, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultTasksAccounting").Store(&defaultTasksAccounting)
	return
}

// GetDefaultLimitCPU gets org.freedesktop.systemd1.Manager.DefaultLimitCPU property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitCPU(ctx context.Context) (defaultLimitCPU uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitCPU").Store(&defaultLimitCPU)
	return
}

// GetDefaultLimitCPUSoft gets org.freedesktop.systemd1.Manager.DefaultLimitCPUSoft property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitCPUSoft(ctx context.Context) (defaultLimitCPUSoft uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitCPUSoft").Store(&defaultLimitCPUSoft)
	return
}

// GetDefaultLimitFSIZE gets org.freedesktop.systemd1.Manager.DefaultLimitFSIZE property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitFSIZE(ctx context.Context) (defaultLimitFSIZE uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitFSIZE").Store(&defaultLimitFSIZE)
	return
}

// GetDefaultLimitFSIZESoft gets org.freedesktop.systemd1.Manager.DefaultLimitFSIZESoft property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitFSIZESoft(ctx context.Context) (defaultLimitFSIZESoft uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitFSIZESoft").Store(&defaultLimitFSIZESoft)
	return
}

// GetDefaultLimitDATA gets org.freedesktop.systemd1.Manager.DefaultLimitDATA property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitDATA(ctx context.Context) (defaultLimitDATA uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitDATA").Store(&defaultLimitDATA)
	return
}

// GetDefaultLimitDATASoft gets org.freedesktop.systemd1.Manager.DefaultLimitDATASoft property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitDATASoft(ctx context.Context) (defaultLimitDATASoft uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitDATASoft").Store(&defaultLimitDATASoft)
	return
}

// GetDefaultLimitSTACK gets org.freedesktop.systemd1.Manager.DefaultLimitSTACK property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitSTACK(ctx context.Context) (defaultLimitSTACK uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitSTACK").Store(&defaultLimitSTACK)
	return
}

// GetDefaultLimitSTACKSoft gets org.freedesktop.systemd1.Manager.DefaultLimitSTACKSoft property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitSTACKSoft(ctx context.Context) (defaultLimitSTACKSoft uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitSTACKSoft").Store(&defaultLimitSTACKSoft)
	return
}

// GetDefaultLimitCORE gets org.freedesktop.systemd1.Manager.DefaultLimitCORE property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitCORE(ctx context.Context) (defaultLimitCORE uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitCORE").Store(&defaultLimitCORE)
	return
}

// GetDefaultLimitCORESoft gets org.freedesktop.systemd1.Manager.DefaultLimitCORESoft property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitCORESoft(ctx context.Context) (defaultLimitCORESoft uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitCORESoft").Store(&defaultLimitCORESoft)
	return
}

// GetDefaultLimitRSS gets org.freedesktop.systemd1.Manager.DefaultLimitRSS property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitRSS(ctx context.Context) (defaultLimitRSS uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitRSS").Store(&defaultLimitRSS)
	return
}

// GetDefaultLimitRSSSoft gets org.freedesktop.systemd1.Manager.DefaultLimitRSSSoft property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitRSSSoft(ctx context.Context) (defaultLimitRSSSoft uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitRSSSoft").Store(&defaultLimitRSSSoft)
	return
}

// GetDefaultLimitNOFILE gets org.freedesktop.systemd1.Manager.DefaultLimitNOFILE property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitNOFILE(ctx context.Context) (defaultLimitNOFILE uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitNOFILE").Store(&defaultLimitNOFILE)
	return
}

// GetDefaultLimitNOFILESoft gets org.freedesktop.systemd1.Manager.DefaultLimitNOFILESoft property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitNOFILESoft(ctx context.Context) (defaultLimitNOFILESoft uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitNOFILESoft").Store(&defaultLimitNOFILESoft)
	return
}

// GetDefaultLimitAS gets org.freedesktop.systemd1.Manager.DefaultLimitAS property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitAS(ctx context.Context) (defaultLimitAS uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitAS").Store(&defaultLimitAS)
	return
}

// GetDefaultLimitASSoft gets org.freedesktop.systemd1.Manager.DefaultLimitASSoft property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitASSoft(ctx context.Context) (defaultLimitASSoft uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitASSoft").Store(&defaultLimitASSoft)
	return
}

// GetDefaultLimitNPROC gets org.freedesktop.systemd1.Manager.DefaultLimitNPROC property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitNPROC(ctx context.Context) (defaultLimitNPROC uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitNPROC").Store(&defaultLimitNPROC)
	return
}

// GetDefaultLimitNPROCSoft gets org.freedesktop.systemd1.Manager.DefaultLimitNPROCSoft property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitNPROCSoft(ctx context.Context) (defaultLimitNPROCSoft uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitNPROCSoft").Store(&defaultLimitNPROCSoft)
	return
}

// GetDefaultLimitMEMLOCK gets org.freedesktop.systemd1.Manager.DefaultLimitMEMLOCK property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitMEMLOCK(ctx context.Context) (defaultLimitMEMLOCK uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitMEMLOCK").Store(&defaultLimitMEMLOCK)
	return
}

// GetDefaultLimitMEMLOCKSoft gets org.freedesktop.systemd1.Manager.DefaultLimitMEMLOCKSoft property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitMEMLOCKSoft(ctx context.Context) (defaultLimitMEMLOCKSoft uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitMEMLOCKSoft").Store(&defaultLimitMEMLOCKSoft)
	return
}

// GetDefaultLimitLOCKS gets org.freedesktop.systemd1.Manager.DefaultLimitLOCKS property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitLOCKS(ctx context.Context) (defaultLimitLOCKS uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitLOCKS").Store(&defaultLimitLOCKS)
	return
}

// GetDefaultLimitLOCKSSoft gets org.freedesktop.systemd1.Manager.DefaultLimitLOCKSSoft property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitLOCKSSoft(ctx context.Context) (defaultLimitLOCKSSoft uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitLOCKSSoft").Store(&defaultLimitLOCKSSoft)
	return
}

// GetDefaultLimitSIGPENDING gets org.freedesktop.systemd1.Manager.DefaultLimitSIGPENDING property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitSIGPENDING(ctx context.Context) (defaultLimitSIGPENDING uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitSIGPENDING").Store(&defaultLimitSIGPENDING)
	return
}

// GetDefaultLimitSIGPENDINGSoft gets org.freedesktop.systemd1.Manager.DefaultLimitSIGPENDINGSoft property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitSIGPENDINGSoft(ctx context.Context) (defaultLimitSIGPENDINGSoft uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitSIGPENDINGSoft").Store(&defaultLimitSIGPENDINGSoft)
	return
}

// GetDefaultLimitMSGQUEUE gets org.freedesktop.systemd1.Manager.DefaultLimitMSGQUEUE property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitMSGQUEUE(ctx context.Context) (defaultLimitMSGQUEUE uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitMSGQUEUE").Store(&defaultLimitMSGQUEUE)
	return
}

// GetDefaultLimitMSGQUEUESoft gets org.freedesktop.systemd1.Manager.DefaultLimitMSGQUEUESoft property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitMSGQUEUESoft(ctx context.Context) (defaultLimitMSGQUEUESoft uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitMSGQUEUESoft").Store(&defaultLimitMSGQUEUESoft)
	return
}

// GetDefaultLimitNICE gets org.freedesktop.systemd1.Manager.DefaultLimitNICE property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitNICE(ctx context.Context) (defaultLimitNICE uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitNICE").Store(&defaultLimitNICE)
	return
}

// GetDefaultLimitNICESoft gets org.freedesktop.systemd1.Manager.DefaultLimitNICESoft property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitNICESoft(ctx context.Context) (defaultLimitNICESoft uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitNICESoft").Store(&defaultLimitNICESoft)
	return
}

// GetDefaultLimitRTPRIO gets org.freedesktop.systemd1.Manager.DefaultLimitRTPRIO property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitRTPRIO(ctx context.Context) (defaultLimitRTPRIO uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitRTPRIO").Store(&defaultLimitRTPRIO)
	return
}

// GetDefaultLimitRTPRIOSoft gets org.freedesktop.systemd1.Manager.DefaultLimitRTPRIOSoft property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitRTPRIOSoft(ctx context.Context) (defaultLimitRTPRIOSoft uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitRTPRIOSoft").Store(&defaultLimitRTPRIOSoft)
	return
}

// GetDefaultLimitRTTIME gets org.freedesktop.systemd1.Manager.DefaultLimitRTTIME property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitRTTIME(ctx context.Context) (defaultLimitRTTIME uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitRTTIME").Store(&defaultLimitRTTIME)
	return
}

// GetDefaultLimitRTTIMESoft gets org.freedesktop.systemd1.Manager.DefaultLimitRTTIMESoft property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultLimitRTTIMESoft(ctx context.Context) (defaultLimitRTTIMESoft uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultLimitRTTIMESoft").Store(&defaultLimitRTTIMESoft)
	return
}

// GetDefaultTasksMax gets org.freedesktop.systemd1.Manager.DefaultTasksMax property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultTasksMax(ctx context.Context) (defaultTasksMax uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultTasksMax").Store(&defaultTasksMax)
	return
}

// GetTimerSlackNSec gets org.freedesktop.systemd1.Manager.TimerSlackNSec property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetTimerSlackNSec(ctx context.Context) (timerSlackNSec uint64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "TimerSlackNSec").Store(&timerSlackNSec)
	return
}

// GetDefaultOOMPolicy gets org.freedesktop.systemd1.Manager.DefaultOOMPolicy property.
//
// Annotations:
//   @org.freedesktop.DBus.Property.EmitsChangedSignal = const
func (o *OrgFreedesktopSystemd1Manager) GetDefaultOOMPolicy(ctx context.Context) (defaultOOMPolicy string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceOrgFreedesktopSystemd1Manager, "DefaultOOMPolicy").Store(&defaultOOMPolicy)
	return
}

// OrgFreedesktopSystemd1ManagerUnitNewSignal represents org.freedesktop.systemd1.Manager.UnitNew signal.
type OrgFreedesktopSystemd1ManagerUnitNewSignal struct {
	sender string
	Path   dbus.ObjectPath
	Body   *OrgFreedesktopSystemd1ManagerUnitNewSignalBody
}

// Name returns the signal's name.
func (s *OrgFreedesktopSystemd1ManagerUnitNewSignal) Name() string {
	return "UnitNew"
}

// Interface returns the signal's interface.
func (s *OrgFreedesktopSystemd1ManagerUnitNewSignal) Interface() string {
	return InterfaceOrgFreedesktopSystemd1Manager
}

// Sender returns the signal's sender unique name.
func (s *OrgFreedesktopSystemd1ManagerUnitNewSignal) Sender() string {
	return s.sender
}

func (s *OrgFreedesktopSystemd1ManagerUnitNewSignal) path() dbus.ObjectPath {
	return s.Path
}

func (s *OrgFreedesktopSystemd1ManagerUnitNewSignal) values() []interface{} {
	return []interface{}{s.Body.V0, s.Body.V1}
}

// OrgFreedesktopSystemd1ManagerUnitNewSignalBody is body container.
type OrgFreedesktopSystemd1ManagerUnitNewSignalBody struct {
	V0 string
	V1 dbus.ObjectPath
}

// OrgFreedesktopSystemd1ManagerUnitRemovedSignal represents org.freedesktop.systemd1.Manager.UnitRemoved signal.
type OrgFreedesktopSystemd1ManagerUnitRemovedSignal struct {
	sender string
	Path   dbus.ObjectPath
	Body   *OrgFreedesktopSystemd1ManagerUnitRemovedSignalBody
}

// Name returns the signal's name.
func (s *OrgFreedesktopSystemd1ManagerUnitRemovedSignal) Name() string {
	return "UnitRemoved"
}

// Interface returns the signal's interface.
func (s *OrgFreedesktopSystemd1ManagerUnitRemovedSignal) Interface() string {
	return InterfaceOrgFreedesktopSystemd1Manager
}

// Sender returns the signal's sender unique name.
func (s *OrgFreedesktopSystemd1ManagerUnitRemovedSignal) Sender() string {
	return s.sender
}

func (s *OrgFreedesktopSystemd1ManagerUnitRemovedSignal) path() dbus.ObjectPath {
	return s.Path
}

func (s *OrgFreedesktopSystemd1ManagerUnitRemovedSignal) values() []interface{} {
	return []interface{}{s.Body.V0, s.Body.V1}
}

// OrgFreedesktopSystemd1ManagerUnitRemovedSignalBody is body container.
type OrgFreedesktopSystemd1ManagerUnitRemovedSignalBody struct {
	V0 string
	V1 dbus.ObjectPath
}

// OrgFreedesktopSystemd1ManagerJobNewSignal represents org.freedesktop.systemd1.Manager.JobNew signal.
type OrgFreedesktopSystemd1ManagerJobNewSignal struct {
	sender string
	Path   dbus.ObjectPath
	Body   *OrgFreedesktopSystemd1ManagerJobNewSignalBody
}

// Name returns the signal's name.
func (s *OrgFreedesktopSystemd1ManagerJobNewSignal) Name() string {
	return "JobNew"
}

// Interface returns the signal's interface.
func (s *OrgFreedesktopSystemd1ManagerJobNewSignal) Interface() string {
	return InterfaceOrgFreedesktopSystemd1Manager
}

// Sender returns the signal's sender unique name.
func (s *OrgFreedesktopSystemd1ManagerJobNewSignal) Sender() string {
	return s.sender
}

func (s *OrgFreedesktopSystemd1ManagerJobNewSignal) path() dbus.ObjectPath {
	return s.Path
}

func (s *OrgFreedesktopSystemd1ManagerJobNewSignal) values() []interface{} {
	return []interface{}{s.Body.V0, s.Body.V1, s.Body.V2}
}

// OrgFreedesktopSystemd1ManagerJobNewSignalBody is body container.
type OrgFreedesktopSystemd1ManagerJobNewSignalBody struct {
	V0 uint32
	V1 dbus.ObjectPath
	V2 string
}

// OrgFreedesktopSystemd1ManagerJobRemovedSignal represents org.freedesktop.systemd1.Manager.JobRemoved signal.
type OrgFreedesktopSystemd1ManagerJobRemovedSignal struct {
	sender string
	Path   dbus.ObjectPath
	Body   *OrgFreedesktopSystemd1ManagerJobRemovedSignalBody
}

// Name returns the signal's name.
func (s *OrgFreedesktopSystemd1ManagerJobRemovedSignal) Name() string {
	return "JobRemoved"
}

// Interface returns the signal's interface.
func (s *OrgFreedesktopSystemd1ManagerJobRemovedSignal) Interface() string {
	return InterfaceOrgFreedesktopSystemd1Manager
}

// Sender returns the signal's sender unique name.
func (s *OrgFreedesktopSystemd1ManagerJobRemovedSignal) Sender() string {
	return s.sender
}

func (s *OrgFreedesktopSystemd1ManagerJobRemovedSignal) path() dbus.ObjectPath {
	return s.Path
}

func (s *OrgFreedesktopSystemd1ManagerJobRemovedSignal) values() []interface{} {
	return []interface{}{s.Body.V0, s.Body.V1, s.Body.V2, s.Body.V3}
}

// OrgFreedesktopSystemd1ManagerJobRemovedSignalBody is body container.
type OrgFreedesktopSystemd1ManagerJobRemovedSignalBody struct {
	V0 uint32
	V1 dbus.ObjectPath
	V2 string
	V3 string
}

// OrgFreedesktopSystemd1ManagerStartupFinishedSignal represents org.freedesktop.systemd1.Manager.StartupFinished signal.
type OrgFreedesktopSystemd1ManagerStartupFinishedSignal struct {
	sender string
	Path   dbus.ObjectPath
	Body   *OrgFreedesktopSystemd1ManagerStartupFinishedSignalBody
}

// Name returns the signal's name.
func (s *OrgFreedesktopSystemd1ManagerStartupFinishedSignal) Name() string {
	return "StartupFinished"
}

// Interface returns the signal's interface.
func (s *OrgFreedesktopSystemd1ManagerStartupFinishedSignal) Interface() string {
	return InterfaceOrgFreedesktopSystemd1Manager
}

// Sender returns the signal's sender unique name.
func (s *OrgFreedesktopSystemd1ManagerStartupFinishedSignal) Sender() string {
	return s.sender
}

func (s *OrgFreedesktopSystemd1ManagerStartupFinishedSignal) path() dbus.ObjectPath {
	return s.Path
}

func (s *OrgFreedesktopSystemd1ManagerStartupFinishedSignal) values() []interface{} {
	return []interface{}{s.Body.V0, s.Body.V1, s.Body.V2, s.Body.V3, s.Body.V4, s.Body.V5}
}

// OrgFreedesktopSystemd1ManagerStartupFinishedSignalBody is body container.
type OrgFreedesktopSystemd1ManagerStartupFinishedSignalBody struct {
	V0 uint64
	V1 uint64
	V2 uint64
	V3 uint64
	V4 uint64
	V5 uint64
}

// OrgFreedesktopSystemd1ManagerUnitFilesChangedSignal represents org.freedesktop.systemd1.Manager.UnitFilesChanged signal.
type OrgFreedesktopSystemd1ManagerUnitFilesChangedSignal struct {
	sender string
	Path   dbus.ObjectPath
	Body   *OrgFreedesktopSystemd1ManagerUnitFilesChangedSignalBody
}

// Name returns the signal's name.
func (s *OrgFreedesktopSystemd1ManagerUnitFilesChangedSignal) Name() string {
	return "UnitFilesChanged"
}

// Interface returns the signal's interface.
func (s *OrgFreedesktopSystemd1ManagerUnitFilesChangedSignal) Interface() string {
	return InterfaceOrgFreedesktopSystemd1Manager
}

// Sender returns the signal's sender unique name.
func (s *OrgFreedesktopSystemd1ManagerUnitFilesChangedSignal) Sender() string {
	return s.sender
}

func (s *OrgFreedesktopSystemd1ManagerUnitFilesChangedSignal) path() dbus.ObjectPath {
	return s.Path
}

func (s *OrgFreedesktopSystemd1ManagerUnitFilesChangedSignal) values() []interface{} {
	return []interface{}{}
}

// OrgFreedesktopSystemd1ManagerUnitFilesChangedSignalBody is body container.
type OrgFreedesktopSystemd1ManagerUnitFilesChangedSignalBody struct {
}

// OrgFreedesktopSystemd1ManagerReloadingSignal represents org.freedesktop.systemd1.Manager.Reloading signal.
type OrgFreedesktopSystemd1ManagerReloadingSignal struct {
	sender string
	Path   dbus.ObjectPath
	Body   *OrgFreedesktopSystemd1ManagerReloadingSignalBody
}

// Name returns the signal's name.
func (s *OrgFreedesktopSystemd1ManagerReloadingSignal) Name() string {
	return "Reloading"
}

// Interface returns the signal's interface.
func (s *OrgFreedesktopSystemd1ManagerReloadingSignal) Interface() string {
	return InterfaceOrgFreedesktopSystemd1Manager
}

// Sender returns the signal's sender unique name.
func (s *OrgFreedesktopSystemd1ManagerReloadingSignal) Sender() string {
	return s.sender
}

func (s *OrgFreedesktopSystemd1ManagerReloadingSignal) path() dbus.ObjectPath {
	return s.Path
}

func (s *OrgFreedesktopSystemd1ManagerReloadingSignal) values() []interface{} {
	return []interface{}{s.Body.V0}
}

// OrgFreedesktopSystemd1ManagerReloadingSignalBody is body container.
type OrgFreedesktopSystemd1ManagerReloadingSignalBody struct {
	V0 bool
}
